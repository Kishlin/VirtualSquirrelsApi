services:
  UserBundle\Controller\ChangePasswordController:
    class: 'App\Controller\ChangePasswordController'
    arguments:
      $eventDispatcher: '@event_dispatcher'
      $formFactory: '@fos_user.change_password.form.factory'
      $userManager: '@fos_user.user_manager'
    calls:
      - method: setContainer
        arguments:
          - '@service_container'
    tags: ['controller.service_arguments']
    public: true

  UserBundle\Controller\AccessControlController:
    class: 'App\Controller\AccessControlController'
    arguments:
      $userManager: '@App\Manager\UserManagerInterface'
      $eventDispatcher: '@event_dispatcher'
    calls:
      - method: setContainer
        arguments:
          - '@service_container'
    tags: ['controller.service_arguments']
    public: true

  UserBundle\Handler\Security\AuthenticationFailure:
    class: 'App\Handler\Security\AuthenticationFailure'
    arguments:
      $exceptionResponseBuilder: '@App\Services\HttpFoundation\ExceptionResponseBuilderInterface'

  UserBundle\Handler\Security\AuthenticationSuccess:
    class: 'App\Handler\Security\AuthenticationSuccess'
    arguments:
      $logger: '@logger'
      $router: '@router'
      $loginRedirect: '%login_redirect%'
    tags:
      - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }

  UserBundle\Handler\Security\LogoutSuccess:
    class: 'App\Handler\Security\LogoutSuccess'


  security.custom.authentication.failure:
    alias: 'App\Handler\Security\AuthenticationFailure'

  security.custom.authentication.success:
    alias: 'App\Handler\Security\AuthenticationSuccess'

  security.custom.authentication.logout:
    alias: 'App\Handler\Security\LogoutSuccess'
